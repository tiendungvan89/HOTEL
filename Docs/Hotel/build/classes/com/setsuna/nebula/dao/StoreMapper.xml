<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.setsuna.nebula.dao.StoreMapper">

	<update id="update" parameterType="com.setsuna.nebula.entity.Store">
		UPDATE store
		<set>
			<if test="categoryId != null">
				category_id = #{categoryId,jdbcType=BIGINT},
			</if>
			<if test="quantity != null">
				quantity = #{quantity,jdbcType=BIGINT},
			</if>
			<if test="unitPrice != null">
				unit_price = #{unitPrice,jdbcType=VARCHAR},
			</if>
			<if test="dateImport != null">
				date_inport = #{datImport,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				note = #{note,jdbcType=VARCHAR}
			</if>
		</set>
		<where>
			id = #{id,jdbcType=BIGINT}
		</where>
	</update>

	<insert id="insert" parameterType="com.setsuna.nebula.entity.Store"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO store
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="categoryId != null">
				category_id,
			</if>
			<if test="quantity != null">
				quantity,
			</if>
			<if test="unitPrice != null">
				unit_price,
			</if>
			<if test="dateImport != null">
				date_import,
			</if>
			<if test="note != null">
				note
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="categoryId != null">
				#{categoryId,jdbcType=BIGINT},
			</if>
			<if test="quantity != null">
				#{quantity,jdbcType=BIGINT},
			</if>
			<if test="unitPrice != null">
				#{unitPrice,jdbcType=VARCHAR},
			</if>
			<if test="dateImport != null">
				#{dateImport,jdbcType=VARCHAR},
			</if>
			<if test="note != null">
				#{note,jdbcType=VARCHAR}
			</if>
		</trim>
	</insert>

	<select id="selectBy" resultType="com.setsuna.nebula.entity.Store" >
		SELECT * FROM degree
		<if test="param != null">
			WHERE 1 = 1
			<if test="param.id != null">
				AND id = #{param.id,jdbcType=BIGINT}
			</if>
			<if test="param.name != null">
				AND name LIKE '%' || #{param.name,jdbcType=VARCHAR} || '%'
			</if>
			<if test="param.note != null">
				AND note LIKE '%' || #{param.note,jdbcType=VARCHAR} || '%'
			</if>
			<if test="param.status != null">
				AND status = #{param.status,jdbcType=INTEGER}
			</if>
		</if>
		ORDER BY name
	</select>

</mapper>